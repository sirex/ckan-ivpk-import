---
# Ansible script for setting up CKAN instance for development or testing
#
# This script uses following instructions:
# http://docs.ckan.org/en/latest/maintaining/installing/install-from-source.html
# http://docs.ckan.org/en/latest/maintaining/datastore.html
#
# You can use this command in order to set up Ansible:
#
#   ansible-playbook --ask-become-pass -c local -i ckan, -e path=$PWD ckan.yml

- hosts: ckan

  vars:
    venv: "{{ path }}/venv"
    config: "{{ path }}/development.ini"
    ckan: "{{ venv }}/src/ckan"
    ckan_version: 2.6.0

  tasks:

    - name: install system dependencies
      apt: name={{ item }} state=present
      become: true
      with_items:
        - python-dev
        - python-psycopg2
        - python-pip
        - python-virtualenv
        - postgresql
        - postgresql-client
        - postgresql-contrib
        - libpq-dev
        - git-core
        - default-jdk
        - solr-jetty
        - redis-server

    - name: install ckan into python virtualenv
      pip:
        chdir: "{{ path }}"
        virtualenv: "{{ venv }}"
        virtualenv_python: python2
        name: "git+https://github.com/ckan/ckan.git@ckan-{{ ckan_version }}#egg=ckan"
        editable: true
        state: present

    - name: install ckan dependencies
      pip:
        chdir: "{{ path }}"
        virtualenv: "{{ venv }}"
        virtualenv_python: python2
        requirements: "{{ ckan }}/requirements.txt"
        state: present

    - name: create ckan_default postgresql user
      become: true
      become_user: postgres
      postgresql_user:
        name: ckan_default
        password: verysecret
        role_attr_flags: NOCREATEDB,NOSUPERUSER,NOCREATEROLE

    - name: create ckan_default postgresql database
      become: true
      become_user: postgres
      postgresql_db:
        name: ckan_default
        owner: ckan_default
        encoding: UTF-8
        lc_collate: C.UTF-8
        lc_ctype: C.UTF-8
        template: template0
      notify: create ckan database tables
      tags: [create_ckan_db]

    - name: create datastore_default postgresql user
      become: true
      become_user: postgres
      postgresql_user:
        name: datastore_default
        password: verysecret
        role_attr_flags: NOCREATEDB,NOSUPERUSER,NOCREATEROLE
      register: datastore_db_user

    - name: create datastore_default postgresql database
      become: true
      become_user: postgres
      postgresql_db:
        name: datastore_default
        owner: ckan_default
        encoding: UTF-8
        lc_collate: C.UTF-8
        lc_ctype: C.UTF-8
        template: template0

    - name: configure solr/jetty
      become: true
      lineinfile:
        dest: /etc/default/jetty8
        regexp: "^{{ item.name }}="
        line: "{{ item.name }}={{ item.value }}"
      with_items:
        - {name: "NO_START", value: "0"}
        - {name: "JETTY_HOST", value: "127.0.0.1"}
        - {name: "JETTY_PORT", value: "8983"}

    - name: start solr/jetty
      become: true
      service: name=jetty8 state=started

    - name: create solr schema file backup
      become: true
      command: mv /etc/solr/conf/schema.xml /etc/solr/conf/schema.xml.bak creates=/etc/solr/conf/schema.xml.bak

    - name: replace solr schema file with one provided by ckan
      become: true
      notify: restart solr
      command: cp -a {{ ckan }}/ckan/config/solr/schema.xml /etc/solr/conf/schema.xml creates=/etc/solr/conf/schema.xml

    - name: create symbolic link to who.ini
      file: src={{ ckan }}/who.ini dest={{ path }}/who.ini state=link

    - name: create ckan configuration file
      command: "{{ venv }}/bin/paster make-config ckan {{ config }} creates={{ config }} chdir={{ ckan }}"

    - name: configure ckan
      lineinfile:
        dest: "{{ config }}"
        regexp: "^(#\\s*)?{{ item.name }} ="
        line: "{{ item.name }} = {{ item.value }}"
      with_items:
        - {name: "sqlalchemy.url", value: "postgresql://ckan_default:verysecret@localhost/ckan_default"}
        - {name: "ckan.site_id", value: "default"}
        - {name: "ckan.site_url", value: "http://localhost:5000"}
        - {name: "solr_url", value: "http://127.0.0.1:8983/solr"}
        - {name: "ckan.plugins", value: "stats text_view image_view recline_view datastore"}
        - {name: "ckan.datastore.write_url", value: "postgresql://ckan_default:verysecret@localhost/datastore_default"}
        - {name: "ckan.datastore.read_url", value: "postgresql://datastore_default:verysecret@localhost/datastore_default"}

    - name: get datastore_default postresql user permissions
      shell: "{{ venv }}/bin/paster --plugin=ckan datastore set-permissions -c {{ config }} > /tmp/datastore_permissions.sql chdir={{ ckan }}"
      when: datastore_db_user.changed

    - name: set datastore_default postresql user permissions
      become: true
      become_user: postgres
      command: psql --set=ON_ERROR_STOP=1 --file=/tmp/datastore_permissions.sql
      when: datastore_db_user.changed

  handlers:

    - name: restart solr
      become: true
      service: name=jetty8 state=restarted

    - name: create ckan database tables
      command: "{{ venv }}/bin/paster --plugin=ckan db init -c {{ config }} chdir={{ ckan }}"
